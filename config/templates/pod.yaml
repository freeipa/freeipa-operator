# Proof of Concept that launch ipa-server-install in an initContainer,
# preparing the whole data volume.
#
# Quick Start:
#   make app-delete app-deploy get-info
#
# References:
#   https://systemd.io/CONTAINER_INTERFACE/
# yamllint disable-line rule:line-length
#   https://stackoverflow.com/questions/52940774/kubernetes-how-to-check-current-domain-set-by-cluster-domain-from-pod
---
apiVersion: v1
kind: Pod
metadata:
  name: freeipa
  labels:
    app: freeipa
  annotations:
    openshift.io/scc: freeipa
spec:
  serviceAccountName: freeipa
  # dnsConfig:
  #   nameservers:
  #     - 127.0.0.1
  # hostAliases:
  #   - ip: "127.0.0.1"
  #     hostnames:
  #       - ${APP}.apps.${CLUSTER_DOMAIN}
  #       - apps.${CLUSTER_DOMAIN}
  containers:
    - name: main
      # Change this to the image pushed to your container registry
      # which is stored in your DOCKER_IMAGE env variable when building
      # with 'make container-build container-push'
      image: ${DOCKER_IMAGE}
      imagePullPolicy: Always
      # We need 'tty: true' to see the systemd traces
      tty: true
      securityContext:
        privileged: false
        capabilities:
          drop:
            # Default capabilities
            - "NET_RAW"
            - "SYS_CHROOT"
            - "FSETID"

            # No default capabilities
            - "AUDIT_CONTROL"
            - "AUDIT_READ"
            - "BLOCK_SUSPEND"
            - "DAC_READ_SEARCH"
            - "IPC_LOCK"
            - "IPC_OWNER"
            - "LEASE"
            - "LINUX_IMMUTABLE"
            - "MAC_ADMIN"
            - "MAC_OVERRIDE"
            - "NET_ADMIN"
            - "NET_BROADCAST"
            - "SYS_BOOT"
            - "SYS_MODULE"
            - "SYS_NICE"
            - "SYS_PACCT"
            - "SYS_PTRACE"
            - "SYS_RAWIO"
            - "SYS_TIME"
            - "SYS_TTY_CONFIG"
            - "SYSLOG"
            - "WAKE_ALARM"
            - "SYS_RAWIO"

            - "MKNOD"

          add:
            # Default capabilities
            - "CHOWN"
            - "FOWNER"
            - "DAC_OVERRIDE"
            - "SETUID"
            - "SETGID"
            - "KILL"
            - "NET_BIND_SERVICE"

            - "SETPCAP"
            - "SETFCAP"

            # No default capabilities
            - "SYS_ADMIN"
            - "SYS_RESOURCE"

      command: ["/usr/sbin/init"]
      args:
        # - exit-on-finished
        - no-exit
        - ipa-server-install
        - -U
        # - --hostname
        # - ${APP}.apps.${CLUSTER_DOMAIN}
        - --realm
        # - apps.${CLUSTER_DOMAIN}
        - ${REALM}
        - --ca-subject=CN=${NAMESPACE}-${TIMESTAMP}, O=${REALM}
        - --no-ntp
        - --no-sshd
        - --no-ssh
        - --verbose
      env:
        # yaml
        # - name: SYSTEMD_OPTS
        # yamllint disable-line rule:line-length
        #   value: "--show-status=true --unit=ipa-server-configure-first.service"
        - name: KRB5_TRACE
          value: /dev/console
        - name: SYSTEMD_LOG_LEVEL
          value: "debug"
        - name: SYSTEMD_LOG_TARGET
          value: "console"
        - name: SYSTEMD_LOG_COLOR
          value: "no"
        - name: INIT_WRAPPER
          value: "1"
        - name: DEBUG_TRACE
          valueFrom:
            configMapKeyRef:
              name: freeipa
              key: DEBUG_TRACE
        - name: PASSWORD
          valueFrom:
            configMapKeyRef:
              name: freeipa
              key: PASSWORD
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: UID_BASE
          valueFrom:
            configMapKeyRef:
              name: freeipa
              key: UID_BASE
        - name: GID_BASE
          valueFrom:
            configMapKeyRef:
              name: freeipa
              key: GID_BASE
        - name: IPA_SERVER_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: freeipa
              key: IPA_SERVER_HOSTNAME
        - name: container_uuid
          valueFrom:
            configMapKeyRef:
              name: freeipa
              key: container_uuid
        # - name: IPA_SERVER_IP
        #   valueFrom:
        #     fieldRef:
        #       fieldPath: status.podIP

        - name: container
          valueFrom:
            configMapKeyRef:
              name: freeipa
              key: container
        - name: SYSTEMD_OFFLINE
          value: "1"
        - name: SYSTEMD_NSPAWN_API_VFS_WRITABLE
          value: "network"
      ports:
        - name: http-tcp
          protocol: TCP
          containerPort: 80
        - name: https-tcp
          protocol: TCP
          containerPort: 443

      volumeMounts:
        - name: data
          mountPath: /data
        - name: systemd-tmp
          mountPath: /tmp
        - name: systemd-sys
          mountPath: /sys
          readOnly: true
        - name: systemd-sys-fs-selinux
          mountPath: /sys/fs/selinux
          readOnly: true
        - name: systemd-sys-firmware
          mountPath: /sys/firmware
          readOnly: true
        - name: systemd-sys-kernel
          mountPath: /sys/kernel
          readOnly: true
        - name: systemd-var-run
          mountPath: /var/run
        - name: systemd-var-dirsrv
          mountPath: /var/run/dirsrv

  initContainers:
    - name: init-container-uuid
      # docker.io/openshift/origin-cli:v4.0
      image: openshift/origin-cli:v4.0
      command: ["/opt/freeipa/init-container-uuid.sh"]
      env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: container_uuid
          valueFrom:
            configMapKeyRef:
              name: freeipa
              key: container_uuid
      volumeMounts:
        - name: scripts
          mountPath: /opt/freeipa

    - name: init-uid-gid-base
      # docker.io/openshift/origin-cli:v4.0
      image: openshift/origin-cli:v4.0
      command: ["/opt/freeipa/init-uid-gid-base.sh"]
      env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: UID_BASE
          valueFrom:
            configMapKeyRef:
              name: freeipa
              key: UID_BASE
        - name: GID_BASE
          valueFrom:
            configMapKeyRef:
              name: freeipa
              key: GID_BASE
      volumeMounts:
        - name: scripts
          mountPath: /opt/freeipa

  volumes:
    - name: data
      emptyDir: {}
    - name: scripts
      configMap:
        name: freeipa
        items:
          - key: "init-container-uuid.sh"
            path: "init-container-uuid.sh"
            mode: 0777
          - key: "init-uid-gid-base.sh"
            path: "init-uid-gid-base.sh"
            mode: 0777
    # https://github.com/containers/podman/issues/2996
    #
    # And from: https://systemd.io/CONTAINER_INTERFACE/
    # Make sure to pre-mount /proc/, /sys/, and /sys/fs/selinux/ before
    # invoking systemd, and mount /proc/sys/, /sys/, and /sys/fs/selinux/
    # read-only in order to prevent the container from altering the host
    # kernel’s configuration settings. (As a special exception, if your
    # container has network namespaces enabled, feel free to make
    # /proc/sys/net/ writable). systemd and various other subsystems (such
    # as the SELinux userspace) have been modified to behave accordingly
    # when these file systems are read-only. (It’s OK to mount /sys/ as
    # tmpfs btw, and only mount a subset of its sub-trees from the real
    # sysfs to hide /sys/firmware/, /sys/kernel/ and so on. If you do that,
    # make sure to mark /sys/ read-only, as that condition is what systemd
    # looks for, and is what is considered to be the API in this context.)
    - name: systemd-sys
      hostPath:
        path: /sys
        type: DirectoryOrCreate
    - name: systemd-sys-fs-selinux
      hostPath:
        path: /sys/fs/selinux
        type: Directory
    - name: systemd-sys-firmware
      hostPath:
        path: /sys/firmware
        type: Directory
    - name: systemd-sys-kernel
      hostPath:
        path: /sys/kernel
        type: Directory
    - name: systemd-var-run
      emptyDir:
        medium: "Memory"
    - name: systemd-var-dirsrv
      emptyDir:
        medium: "Memory"

    # ----------------------------

    - name: systemd-run-rpcbind
      emptyDir:
        medium: "Memory"

    - name: systemd-tmp
      emptyDir:
        medium: "Memory"
    - name: systemd-var-lib-journal
      emptyDir: {}
