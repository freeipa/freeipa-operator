# Proof of Concept that launch ipa-server-install in an initContainer,
# preparing the whole data volume.
#
# Quick Start:
#   make app-delete app-deploy get-info
#
# References:
#   https://systemd.io/CONTAINER_INTERFACE/
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: poc-003
  labels:
    app: poc-003
data:
  DEBUG_TRACE: "2"
  IPA_SERVER_HOSTNAME: "poc-003.apps.permanent.idmocp.lab.eng.rdu2.redhat.com"
  IPA_SERVER_IP: "10.0.135.189"
  # TODO Move PASSWORD into a Secret object
  PASSWORD: "Secret123"
  container: "podman"
  container_uuid: ""
  UID_BASE: ""
  GID_BASE: ""
  # yamllint disable rule:line-length
  init-uid-gid-base.sh: |
    #!/bin/bash
    function yield {
      echo "$*" >&2
    }
    function verbose {
      yield "$*"
      "$@"
    }
    echo "Script: $0"
    TOKEN="$(</var/run/secrets/kubernetes.io/serviceaccount/token)"
    CA_CERT="/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    APP="poc-003"
    echo "NAMESPACE=${NAMESPACE}"
    oc login --token ""  \
             --certificate-authority="" \
             https://kubernetes.default.svc:443
    if [ "${UID_BASE}" == "" ]; then
      UID_BASE="$( oc get namespace/${NAMESPACE} \
                   -o 'jsonpath={.metadata.annotations.openshift\.io/sa\.scc\.uid-range}' )"
      UID_BASE="${UID_BASE%/*}"
      oc patch configmap ${APP} --patch "{\"data\":{\"UID_BASE\": \"${UID_BASE}\"}}"
    fi
    if [ "${GID_BASE}" == "" ]; then
      GID_BASE="$( oc get namespace/${NAMESPACE} \
                   -o 'jsonpath={.metadata.annotations.openshift\.io/sa\.scc\.supplemental-groups}' )"
      GID_BASE="${GID_BASE%/*}"
      oc patch configmap ${APP} \
         --patch "{\"data\":{\"GID_BASE\":\"${GID_BASE}\"}}"
    fi
    UID_BASE="$( oc get cm/${APP} -o 'jsonpath={.data.UID_BASE}' )"
    GID_BASE="$( oc get cm/${APP} -o 'jsonpath={.data.GID_BASE}' )"
    echo "configMap.data.UID_BASE=${UID_BASE}"
    echo "configMap.data.GID_BASE=${GID_BASE}"

  init-container-uuid.sh: |
    #!/bin/bash
    function yield {
      echo "$*" >&2
    }
    function verbose {
      yield "$*"
      "$@"
    }
    echo "Script: $0"
    TOKEN="$(</var/run/secrets/kubernetes.io/serviceaccount/token)"
    CA_CERT="/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    APP="poc-003"
    echo "NAMESPACE=${NAMESPACE}"
    oc login --token "${TOKEN}" \
             --certificate-authority="${CA_CERT}" \
             https://kubernetes.default.svc:443
    container_uuid="$( oc get configmap ${APP} -o 'jsonpath={.data.container_uuid}' )"
    if [ "${container_uuid}" == "" ]; then
      systemd-machine-id-setup
      container_uuid="$(</etc/machine-id)"
      oc patch configmap ${APP} \
         --patch "{\"data\":{\"container_uuid\": \"${container_uuid}\"}}"
    fi
    echo "configMap.data.container_uuid='$( oc get configmap ${APP} -o 'jsonpath={.data.container_uuid}' )'"
  # yamllint enable rule:line-length
---
apiVersion: v1
kind: Pod
metadata:
  name: poc-003
  labels:
    app: poc-003
  annotations:
    openshift.io/scc: poc-003
spec:
  serviceAccountName: poc-003
  # dnsConfig:
  #   nameservers:
  #     - 127.0.0.1
  # hostAliases:
  #   - ip: "127.0.0.1"
  #     hostnames:
  #       - poc-003.apps.permanent.idmocp.lab.eng.rdu2.redhat.com
  #       - apps.permanent.idmocp.lab.eng.rdu2.redhat.com
  containers:
    - name: main
      image: quay.io/avisied0/freeipa-openshift-container:poc-003
      securityContext:
        privileged: false
        capabilities:
          drop:
            # Default capabilities anyuid
            - "FSETID"
            - "NET_RAW"
            - "SYS_CHROOT"

            # No default capabilities
            - "AUDIT_CONTROL"
            - "AUDIT_READ"
            - "BLOCK_SUSPEND"
            - "DAC_READ_SEARCH"
            - "IPC_LOCK"
            - "IPC_OWNER"
            - "LEASE"
            - "LINUX_IMMUTABLE"
            - "MAC_ADMIN"
            - "MAC_OVERRIDE"
            - "NET_ADMIN"
            - "NET_BROADCAST"
            - "SYS_BOOT"
            - "SYS_MODULE"
            - "SYS_NICE"
            - "SYS_PACCT"
            - "SYS_PTRACE"
            - "SYS_RAWIO"
            - "SYS_TIME"
            - "SYS_TTY_CONFIG"
            - "SYSLOG"
            - "WAKE_ALARM"
            - "SYS_RAWIO"

          add:
            # Default capabilities anyuid
            - "CHOWN"
            - "FOWNER"
            - "SETPCAP"
            - "SETFCAP"
            - "SETUID"
            - "SETGID"
            - "DAC_OVERRIDE"
            - "NET_BIND_SERVICE"
            - "KILL"

            # No default capabilities
            - "SYS_ADMIN"
            - "SYS_RESOURCE"
            - "MKNOD"
      command: ["/usr/sbin/init"]
      # args:
      #   # - exit-on-finished
      #   - no-exit
      #   - ipa-server-install
      #   - -U
      #   # - --hostname
      #   # - poc-003.apps.permanent.idmocp.lab.eng.rdu2.redhat.com
      #   - --realm
      #   - apps.permanent.idmocp.lab.eng.rdu2.redhat.com
      #   - --no-ntp
      #   - --no-sshd
      #   - --no-ssh
      #   - --verbose
      env:
        # - name: INIT_WRAPPER
        #   value: "1"
        - name: DEBUG_TRACE
          valueFrom:
            configMapKeyRef:
              name: poc-003
              key: DEBUG_TRACE
        - name: SYSTEMD_LOG_LEVEL
          value: "debug"
        - name: SYSTEMD_LOG_TARGET
          value: "console"
        - name: SYSTEMD_LOG_COLOR
          value: "no"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: UID_BASE
          valueFrom:
            configMapKeyRef:
              name: poc-003
              key: UID_BASE
        - name: GID_BASE
          valueFrom:
            configMapKeyRef:
              name: poc-003
              key: GID_BASE
        - name: container_uuid
          valueFrom:
            configMapKeyRef:
              name: poc-003
              key: container_uuid
        # - name: IPA_SERVER_IP
        #   valueFrom:
        #     fieldRef:
        #       fieldPath: status.podIP
        - name: container
          valueFrom:
            configMapKeyRef:
              name: poc-003
              key: container
      volumeMounts:
        - name: scripts
          mountPath: /opt/poc-003
        - name: data
          mountPath: /data
        - name: systemd-run-rpcbind
          mountPath: /run/rpcbind
        - name: systemd-tmp
          mountPath: /tmp
        - name: systemd-sys
          mountPath: /sys
          readOnly: true
        - name: systemd-sys-fs-selinux
          mountPath: /sys/fs/selinux
          readOnly: true
        - name: systemd-sys-firmware
          mountPath: /sys/firmware
          readOnly: true
        - name: systemd-sys-kernel
          mountPath: /sys/kernel
          readOnly: true

  initContainers:
    - name: init-container-uuid
      image: docker.io/openshift/origin-cli:v4.0
      command: ["/opt/poc-003/init-container-uuid.sh"]
      env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: container_uuid
          valueFrom:
            configMapKeyRef:
              name: poc-003
              key: container_uuid
      volumeMounts:
        - name: scripts
          mountPath: /opt/poc-003

    - name: init-uid-gid-base
      image: docker.io/openshift/origin-cli:v4.0
      command: ["/opt/poc-003/init-uid-gid-base.sh"]
      env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: UID_BASE
          valueFrom:
            configMapKeyRef:
              name: poc-003
              key: UID_BASE
        - name: GID_BASE
          valueFrom:
            configMapKeyRef:
              name: poc-003
              key: GID_BASE
      volumeMounts:
        - name: scripts
          mountPath: /opt/poc-003

    - name: init-volume
      # Change this to the image pushed to your container registry
      # which is stored in your DOCKER_IMAGE env variable when building
      # with 'make container-build container-push'
      image: quay.io/avisied0/freeipa-openshift-container:poc-003
      imagePullPolicy: Always
      # We need 'tty: true' to see the systemd traces
      tty: true
      securityContext:
        privileged: false
        capabilities:
          drop:
            # Default capabilities
            - "NET_RAW"
            - "SYS_CHROOT"
            # - "SETPCAP"
            # - "SETFCAP"
            - "FSETID"

            # No default capabilities
            - "AUDIT_CONTROL"
            - "AUDIT_READ"
            - "BLOCK_SUSPEND"
            - "DAC_READ_SEARCH"
            - "IPC_LOCK"
            - "IPC_OWNER"
            - "LEASE"
            - "LINUX_IMMUTABLE"
            - "MAC_ADMIN"
            - "MAC_OVERRIDE"
            - "NET_ADMIN"
            - "NET_BROADCAST"
            - "SYS_BOOT"
            - "SYS_MODULE"
            - "SYS_NICE"
            - "SYS_PACCT"
            - "SYS_PTRACE"
            - "SYS_RAWIO"
            - "SYS_TIME"
            - "SYS_TTY_CONFIG"
            - "SYSLOG"
            - "WAKE_ALARM"
            - "SYS_RAWIO"

            - "MKNOD"

          add:
            # Default capabilities
            - "CHOWN"
            - "FOWNER"
            - "DAC_OVERRIDE"
            - "SETUID"
            - "SETGID"
            - "KILL"
            - "NET_BIND_SERVICE"

            - "SETPCAP"
            - "SETFCAP"
            # - "FSETID"
            # - "NET_RAW"
            # - "SYS_CHROOT"

            # No default capabilities
            - "SYS_ADMIN"
            - "SYS_RESOURCE"
            # - "MKNOD"

      command: ["/usr/sbin/init"]
      args:
        - exit-on-finished
        # - no-exit
        - ipa-server-install
        - -U
        # - --hostname
        # - poc-003.apps.permanent.idmocp.lab.eng.rdu2.redhat.com
        - --realm
        - apps.permanent.idmocp.lab.eng.rdu2.redhat.com
        - --no-ntp
        - --no-sshd
        - --no-ssh
        - --verbose
      env:
        # yamllint disable rule:line-length
        # - name: SYSTEMD_OPTS
        #   value: "--show-status=true --unit=ipa-server-configure-first.service"
        # yamllint enable rule:line-length
        - name: KRB5_TRACE
          value: /dev/console
        - name: SYSTEMD_LOG_LEVEL
          value: "debug"
        - name: SYSTEMD_LOG_TARGET
          value: "console"
        - name: SYSTEMD_LOG_COLOR
          value: "no"
        - name: INIT_WRAPPER
          value: "1"
        - name: DEBUG_TRACE
          valueFrom:
            configMapKeyRef:
              name: poc-003
              key: DEBUG_TRACE
        - name: PASSWORD
          valueFrom:
            configMapKeyRef:
              name: poc-003
              key: PASSWORD
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: UID_BASE
          valueFrom:
            configMapKeyRef:
              name: poc-003
              key: UID_BASE
        - name: GID_BASE
          valueFrom:
            configMapKeyRef:
              name: poc-003
              key: GID_BASE
        - name: IPA_SERVER_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: poc-003
              key: IPA_SERVER_HOSTNAME
        - name: container_uuid
          valueFrom:
            configMapKeyRef:
              name: poc-003
              key: container_uuid
        # - name: IPA_SERVER_IP
        #   valueFrom:
        #     fieldRef:
        #       fieldPath: status.podIP

        - name: container
          valueFrom:
            configMapKeyRef:
              name: poc-003
              key: container
        - name: SYSTEMD_OFFLINE
          value: "1"
        - name: SYSTEMD_NSPAWN_API_VFS_WRITABLE
          value: "network"

      volumeMounts:
        - name: data
          mountPath: /data
        # - name: systemd-run-rpcbind
        #   mountPath: /run/rpcbind
        - name: systemd-tmp
          mountPath: /tmp
        - name: systemd-sys
          mountPath: /sys
          readOnly: true
        - name: systemd-sys-fs-selinux
          mountPath: /sys/fs/selinux
          readOnly: true
        - name: systemd-sys-firmware
          mountPath: /sys/firmware
          readOnly: true
        - name: systemd-sys-kernel
          mountPath: /sys/kernel
          readOnly: true
        - name: systemd-var-run
          mountPath: /var/run
        - name: systemd-var-dirsrv
          mountPath: /var/run/dirsrv

        # yamllint disable rule:comments-indentation
        # /proc/sys is mounted ro by kubernetes (kubelet?)
        # proc /proc/sys proc ro,relatime 0 0
        #
        # - name: systemd-proc-sys
        #   mountPath: /proc/sys
        #   readOnly: true
        # - name: systemd-proc-sys-net
        #   mountPath: /proc/sys/net
        # yamllint enable rule:comments-indentation

  volumes:
    - name: data
      emptyDir: {}
    - name: scripts
      configMap:
        name: poc-003
        items:
          - key: "init-container-uuid.sh"
            path: "init-container-uuid.sh"
            mode: 0777
          - key: "init-uid-gid-base.sh"
            path: "init-uid-gid-base.sh"
            mode: 0777
    # https://github.com/containers/podman/issues/2996
    #
    # And from: https://systemd.io/CONTAINER_INTERFACE/
    # Make sure to pre-mount /proc/, /sys/, and /sys/fs/selinux/ before
    # invoking systemd, and mount /proc/sys/, /sys/, and /sys/fs/selinux/
    # read-only in order to prevent the container from altering the host
    # kernel’s configuration settings. (As a special exception, if your
    # container has network namespaces enabled, feel free to make
    # /proc/sys/net/ writable). systemd and various other subsystems (such
    # as the SELinux userspace) have been modified to behave accordingly
    # when these file systems are read-only. (It’s OK to mount /sys/ as
    # tmpfs btw, and only mount a subset of its sub-trees from the real
    # sysfs to hide /sys/firmware/, /sys/kernel/ and so on. If you do that,
    # make sure to mark /sys/ read-only, as that condition is what systemd
    # looks for, and is what is considered to be the API in this context.)
    - name: systemd-sys
      hostPath:
        path: /sys
        type: DirectoryOrCreate
    - name: systemd-sys-fs-selinux
      hostPath:
        path: /sys/fs/selinux
        type: Directory
    - name: systemd-sys-firmware
      hostPath:
        path: /sys/firmware
        type: Directory
    - name: systemd-sys-kernel
      hostPath:
        path: /sys/kernel
        type: Directory
    - name: systemd-var-run
      emptyDir:
        medium: "Memory"
    - name: systemd-var-dirsrv
      emptyDir:
        medium: "Memory"

    # ----------------------------

    - name: systemd-run-rpcbind
      emptyDir:
        medium: "Memory"

    - name: systemd-tmp
      emptyDir:
        medium: "Memory"
    - name: systemd-var-lib-journal
      emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: poc-003
  labels:
    app: poc-003
spec:
  selector:
    app: poc-003
  ports:
    - name: http-tcp
      port: 80
      targetPort: 80
      protocol: TCP
    - name: https-tcp
      port: 443
      targetPort: 443
      protocol: TCP
    - name: kerberos-tcp
      port: 88
      targetPort: 88
      protocol: TCP
    - name: kerberos-udp
      port: 88
      targetPort: 88
      protocol: UDP

    - name: kerberos-adm-tcp
      port: 749
      targetPort: 749
      protocol: TCP
    - name: kerberos-adm-udp
      port: 749
      targetPort: 749
      protocol: UDP
---
apiVersion: v1
kind: Route
metadata:
  name: poc-003
  labels:
    app: poc-003
spec:
  host: poc-003
  to:
    kind: Service
    name: poc-003
