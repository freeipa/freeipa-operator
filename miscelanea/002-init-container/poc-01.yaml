# Proof of Concept for reading namespace info and inject it in the ConfigMap
#
# Quick Start:
#   export APP=poc-01; make app-delete app-deploy get-info
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: poc-01
  labels:
    app: poc-01
data:
  UID_BASE: ""
  GID_BASE: ""
  # yamllint disable rule:line-length
  init-uid-gid-base.sh: |
    #!/bin/bash
    function yield {
      echo "$*" >&2
    }
    function verbose {
      yield "$*"
      "$@"
    }
    echo "Script: $0"
    TOKEN="$(</var/run/secrets/kubernetes.io/serviceaccount/token)"
    CA_CERT="/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    APP="poc-01"
    echo "NAMESPACE=${NAMESPACE}"
    oc login --token "${TOKEN}"  \
             --certificate-authority="${CA_CERT}" \
             https://kubernetes.default.svc:443
    if [ "${UID_BASE}" == "" ]; then
      UID_BASE="$( oc get namespace/avisiedo-init-container \
                   -o 'jsonpath={.metadata.annotations.openshift\.io/sa\.scc\.uid-range}' )"
      UID_BASE="${UID_BASE%/*}"
      oc patch configmap ${APP} --patch "{\"data\":{\"UID_BASE\": \"${UID_BASE}\"}}"
    fi
    if [ "${GID_BASE}" == "" ]; then
      GID_BASE="$( oc get namespace/avisiedo-init-container \
                   -o 'jsonpath={.metadata.annotations.openshift\.io/sa\.scc\.supplemental-groups}' )"
      GID_BASE="${GID_BASE%/*}"
      oc patch configmap ${APP} \
         --patch "{\"data\":{\"GID_BASE\":\"${GID_BASE}\"}}"
    fi
    UID_BASE="$( oc get cm/${APP} -o 'jsonpath={.data.UID_BASE}' )"
    GID_BASE="$( oc get cm/${APP} -o 'jsonpath={.data.GID_BASE}' )"
    echo "configMap.data.UID_BASE=${UID_BASE}"
    echo "configMap.data.GID_BASE=${GID_BASE}"
  main.sh: |
    #!/bin/sh
    echo "Script: $0"
    echo "NAMESPACE=${NAMESPACE}"
    echo "UID_BASE=${UID_BASE}"
    echo "GID_BASE=${GID_BASE}"
    while true; do sleep 1; done
  # yamllint enable rule:line-length
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: poc-01
  labels:
    app: poc-01
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: poc-01
  labels:
    app: poc-01
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "get", "watch"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["list", "get"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["list", "get", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: poc-01
  labels:
    app: poc-01
subjects:
  - kind: ServiceAccount
    name: poc-01
roleRef:
  kind: Role
  name: poc-01
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  name: poc-01
  labels:
    app: poc-01
spec:
  serviceAccountName: poc-01
  # automountServiceAccountToken: true
  containers:
    - name: main
      image: docker.io/openshift/origin-cli:v4.0
      command: ["/opt/poc-01/main.sh"]
      env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: UID_BASE
          valueFrom:
            configMapKeyRef:
              name: poc-01
              key: UID_BASE
        - name: GID_BASE
          valueFrom:
            configMapKeyRef:
              name: poc-01
              key: GID_BASE
      volumeMounts:
        - name: scripts
          mountPath: /opt/poc-01
  initContainers:
    - name: init-uid-gid-base
      image: docker.io/openshift/origin-cli:v4.0
      command: ["/opt/poc-01/init-uid-gid-base.sh"]
      env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: UID_BASE
          valueFrom:
            configMapKeyRef:
              name: poc-01
              key: UID_BASE
        - name: GID_BASE
          valueFrom:
            configMapKeyRef:
              name: poc-01
              key: GID_BASE
      volumeMounts:
        - name: scripts
          mountPath: /opt/poc-01
  volumes:
    - name: scripts
      configMap:
        name: poc-01
        items:
          - key: "init-uid-gid-base.sh"
            path: "init-uid-gid-base.sh"
            mode: 0777
          - key: "main.sh"
            path: "main.sh"
            mode: 0777
